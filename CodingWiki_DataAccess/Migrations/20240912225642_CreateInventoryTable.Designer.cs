// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practice5_DataAccess.Data;

#nullable disable

namespace Practice5_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240912225642_CreateInventoryTable")]
    partial class CreateInventoryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Practice5_Model.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Price = 199.99000000000001,
                            ProductName = "Computer"
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 99.290000000000006,
                            ProductName = "Phone"
                        },
                        new
                        {
                            ProductId = 3,
                            Price = 79.489999999999995,
                            ProductName = "Printer"
                        },
                        new
                        {
                            ProductId = 4,
                            Price = 39.899999999999999,
                            ProductName = "Desk"
                        },
                        new
                        {
                            ProductId = 5,
                            Price = 29.890000000000001,
                            ProductName = "Chair"
                        },
                        new
                        {
                            ProductId = 6,
                            Price = 29.390000000000001,
                            ProductName = "Headphones"
                        },
                        new
                        {
                            ProductId = 7,
                            Price = 19.989999999999998,
                            ProductName = "Mouse"
                        },
                        new
                        {
                            ProductId = 8,
                            Price = 24.949999999999999,
                            ProductName = "Keyboard"
                        },
                        new
                        {
                            ProductId = 9,
                            Price = 34.689999999999998,
                            ProductName = "Table"
                        },
                        new
                        {
                            ProductId = 10,
                            Price = 7.79,
                            ProductName = "Backpack"
                        });
                });

            modelBuilder.Entity("Practice5_Model.Models.ProductInventory", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("ProductsInventory");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Amount = 23
                        },
                        new
                        {
                            ProductId = 2,
                            Amount = 4
                        },
                        new
                        {
                            ProductId = 3,
                            Amount = 47
                        },
                        new
                        {
                            ProductId = 4,
                            Amount = 84
                        },
                        new
                        {
                            ProductId = 5,
                            Amount = 89
                        },
                        new
                        {
                            ProductId = 6,
                            Amount = 46
                        },
                        new
                        {
                            ProductId = 7,
                            Amount = 17
                        },
                        new
                        {
                            ProductId = 8,
                            Amount = 40
                        },
                        new
                        {
                            ProductId = 9,
                            Amount = 16
                        },
                        new
                        {
                            ProductId = 10,
                            Amount = 34
                        });
                });

            modelBuilder.Entity("Practice5_Model.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("PurchaseId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            PurchaseId = 1,
                            ProductId = 9,
                            PurchaseDate = new DateOnly(2024, 9, 23),
                            Total = 129783.12
                        },
                        new
                        {
                            PurchaseId = 2,
                            ProductId = 8,
                            PurchaseDate = new DateOnly(2024, 9, 28),
                            Total = 4823.3800000000001
                        },
                        new
                        {
                            PurchaseId = 3,
                            ProductId = 7,
                            PurchaseDate = new DateOnly(2024, 9, 19),
                            Total = 7298.5699999999997
                        },
                        new
                        {
                            PurchaseId = 4,
                            ProductId = 6,
                            PurchaseDate = new DateOnly(2024, 9, 11),
                            Total = 42389.190000000002
                        },
                        new
                        {
                            PurchaseId = 5,
                            ProductId = 5,
                            PurchaseDate = new DateOnly(2024, 9, 5),
                            Total = 394287.73999999999
                        },
                        new
                        {
                            PurchaseId = 6,
                            ProductId = 4,
                            PurchaseDate = new DateOnly(2024, 9, 6),
                            Total = 978234.82999999996
                        },
                        new
                        {
                            PurchaseId = 7,
                            ProductId = 9,
                            PurchaseDate = new DateOnly(2024, 9, 29),
                            Total = 238723.81
                        },
                        new
                        {
                            PurchaseId = 8,
                            ProductId = 9,
                            PurchaseDate = new DateOnly(2024, 9, 4),
                            Total = 54198.290000000001
                        },
                        new
                        {
                            PurchaseId = 9,
                            ProductId = 8,
                            PurchaseDate = new DateOnly(2024, 9, 12),
                            Total = 3748615.3999999999
                        },
                        new
                        {
                            PurchaseId = 10,
                            ProductId = 7,
                            PurchaseDate = new DateOnly(2024, 9, 13),
                            Total = 139874.34
                        });
                });

            modelBuilder.Entity("Practice5_Model.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("SaleDate")
                        .HasColumnType("date");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("SaleId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            ProductId = 1,
                            SaleDate = new DateOnly(2024, 9, 21),
                            Total = 2199.98
                        },
                        new
                        {
                            SaleId = 2,
                            ProductId = 2,
                            SaleDate = new DateOnly(2024, 9, 12),
                            Total = 1299.49
                        },
                        new
                        {
                            SaleId = 3,
                            ProductId = 3,
                            SaleDate = new DateOnly(2024, 9, 13),
                            Total = 33499.989999999998
                        },
                        new
                        {
                            SaleId = 4,
                            ProductId = 4,
                            SaleDate = new DateOnly(2024, 9, 14),
                            Total = 28734.119999999999
                        },
                        new
                        {
                            SaleId = 5,
                            ProductId = 3,
                            SaleDate = new DateOnly(2024, 9, 6),
                            Total = 397421.09999999998
                        },
                        new
                        {
                            SaleId = 6,
                            ProductId = 4,
                            SaleDate = new DateOnly(2024, 9, 30),
                            Total = 23879.290000000001
                        },
                        new
                        {
                            SaleId = 7,
                            ProductId = 1,
                            SaleDate = new DateOnly(2024, 9, 9),
                            Total = 834.92999999999995
                        },
                        new
                        {
                            SaleId = 8,
                            ProductId = 2,
                            SaleDate = new DateOnly(2024, 9, 10),
                            Total = 97342.869999999995
                        },
                        new
                        {
                            SaleId = 9,
                            ProductId = 3,
                            SaleDate = new DateOnly(2024, 9, 24),
                            Total = 8921.7299999999996
                        },
                        new
                        {
                            SaleId = 10,
                            ProductId = 4,
                            SaleDate = new DateOnly(2024, 9, 12),
                            Total = 181734.39000000001
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
